<%-- --%>
<% //generating the corresponding aspect in aop.xml	
String aop=context.getVariable("aopxml").toString();
aop=aop.concat("<aspect name=\"").concat(context.getVariable("classPackageName").toString()); 
aop=aop.concat(".aspects.").concat(context.getVariable("classFileName").toString());
aop=aop.concat("_").concat(context.getVariable("opName").toString().replace('[',' ').replace(']',' ').replaceAll(" ","").replaceAll("name=","")); 
context.setVariable("aopxml",aop.concat("_NotNullReturn\"/>\n")); 
%>
<c:replaceStrings 
		replace="%class,%package,%operation" 
		with="{$className},{$classPackageName},{$opName}">
//This code is generate automatically, DO NOT MODIFY!
package %package.aspects;

import %package.*;
import java.util.logging.*;

public privileged aspect <c:get select="$classFileName" />_%operation_NotNullReturn{

    /*
	 * Checks if a method returns Null
	 */					
	after() returning(Object retVal): !cflow(adviceexecution()) && call(* *.%operation(..)) && target(%class){
		if(retVal==null){
		    Logger.getLogger("ch.unisi.inf.luminous").log(Level.SEVERE,
		    	"Null object returned calling %class.%operation",
				new Throwable());
		}
	}
}
</c:replaceStrings>